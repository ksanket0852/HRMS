version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hrms_postgres
    environment:
      POSTGRES_DB: hrms_db
      POSTGRES_USER: hrms_user
      POSTGRES_PASSWORD: hrms_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hrms_network

  # Redis (Optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: hrms_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hrms_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hrms_backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://hrms_user:hrms_password@postgres:5432/hrms_db
      - REDIS_URL=redis://redis:6379
      - PORT=5000
      - CORS_ORIGIN=http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    networks:
      - hrms_network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hrms_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - REACT_APP_WS_URL=http://localhost:5000
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - hrms_network
    restart: unless-stopped

  # Nginx (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: hrms_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - hrms_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  hrms_network:
    driver: bridge
